services:
  coap-calculator-simple:
    image: thingweb/test-things-coap-calculator-simple
    labels:
      - traefik.udp.routers.coap-calculator-simple.entrypoints=coap-calculator-simple
      - traefik.udp.services.coap-calculator-simple.loadbalancer.server.port=${COAP_SIMPLE_PORT_OUT}
    environment:
      - HOSTNAME=${STACK_HOSTNAME}
      - PORT=${COAP_SIMPLE_PORT_OUT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    networks:
      - things_network
  coap-calculator-content-negotiation:
    image: thingweb/test-things-coap-calculator-content-negotiation
    labels:
      - traefik.udp.routers.coap-calculator-content-negotiation.entrypoints=coap-calculator-content-negotiation
      - traefik.udp.services.coap-calculator-simple.loadbalancer.server.port=${COAP_NEGOTIATION_PORT_OUT}
    environment:
      - HOSTNAME=${STACK_HOSTNAME}
      - PORT=${COAP_NEGOTIATION_PORT_OUT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    networks:
      - things_network
  http-express-calculator-simple:
    image: thingweb/test-things-http-express-calculator-simple
    labels:
      - traefik.http.routers.http-express-calculator-simple.rule=PathPrefix(`/http-express-calculator-simple`)
      - traefik.http.services.http-express-calculator-simple.loadbalancer.server.port=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${STACK_HOSTNAME}
      - PORT=${WEB_PORT_OUT}
      - LOKI_HOSTNAME=${LOKI_HOSTNAME}
      - LOKI_PORT=${LOKI_PORT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://${STACK_HOSTNAME}:${WEB_PORT_OUT}/http-express-calculator-simple || exit 1
      interval: ${HC_INTERVAL}
      timeout: ${HC_TIMEOUT}
      retries: ${HC_RETRIES}
      start_period: ${HC_START_PERIOD}
    networks:
      - things_network
  http-express-calculator-content-negotiation:
    image: thingweb/test-things-http-express-calculator-content-negotiation
    labels:
      - traefik.http.routers.http-express-calculator-content-negotiation.rule=PathPrefix(`/http-express-calculator-content-negotiation`)
      - traefik.http.services.http-express-calculator-content-negotiation.loadbalancer.server.port=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${STACK_HOSTNAME}
      - PORT=${WEB_PORT_OUT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://${STACK_HOSTNAME}:${WEB_PORT_OUT}/http-express-calculator-content-negotiation || exit 1
      interval: ${HC_INTERVAL}
      timeout: ${HC_TIMEOUT}
      retries: ${HC_RETRIES}
      start_period: ${HC_START_PERIOD}
    networks:
      - things_network
  http-flask-calculator:
    image: thingweb/test-things-flask-calculator
    labels:
      - traefik.http.routers.http-flask-calculator.rule=PathPrefix(`/http-flask-calculator`)
      - traefik.http.services.http-flask-calculator.loadbalancer.server.port=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${STACK_HOSTNAME}
      - PORT=${WEB_PORT_OUT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://${STACK_HOSTNAME}:${WEB_PORT_OUT}/http-flask-calculator || exit 1
      interval: ${HC_INTERVAL}
      timeout: ${HC_TIMEOUT}
      retries: ${HC_RETRIES}
      start_period: ${HC_START_PERIOD}
    networks:
      - things_network
  mqtt-calculator:
    image: thingweb/test-things-mqtt-calculator
    environment:
      - BROKER_URI=${BROKER_URI}
      - LOKI_HOSTNAME=${LOKI_HOSTNAME}
      - LOKI_PORT=${LOKI_PORT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    networks:
      - things_network
  modbus-elevator:
    image: thingweb/test-things-modbus-elevator
    labels:
      - traefik.tcp.routers.modbus-elevator.entrypoints=modbus-elevator
      - traefik.tcp.routers.modbus-elevator.rule=HostSNI(`*`)
      - traefik.tcp.services.modbus-elevator.loadbalancer.server.port=${MODBUS_ELEVATOR_PORT_OUT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    networks:
      - things_network
  http-advanced-coffee-machine:
    image: thingweb/test-things-http-advanced-coffee-machine
    labels:
      - traefik.http.routers.http-advanced-coffee-machine.rule=PathPrefix(`/http-advanced-coffee-machine`)
      - traefik.http.services.http-advanced-coffee-machine.loadbalancer.server.port=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${STACK_HOSTNAME}
      - PORT=${WEB_PORT_OUT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    networks:
      - things_network
  http-data-schema-thing:
    image: thingweb/test-things-http-data-schema-thing
    labels:
      - traefik.http.routers.http-data-schema-thing.rule=PathPrefix(`/http-data-schema-thing`)
      - traefik.http.services.http-data-schema-thing.loadbalancer.server.port=${WEB_PORT_OUT}
    environment:
      - HOSTNAME=${STACK_HOSTNAME}
      - PORT=${WEB_PORT_OUT}
      - LOKI_HOSTNAME=${LOKI_HOSTNAME}
      - LOKI_PORT=${LOKI_PORT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    networks:
      - things_network
  smart-home-presence-sensor:
    image: thingweb/test-things-smart-home-presence-sensor
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    networks:
      - things_network
  smart-home-simple-coffee-machine:
    image: thingweb/test-things-smart-home-simple-coffee-machine
    labels:
      # TD is not exposed since it contains hostname that cannot be accessed outside the docker network
      - traefik.http.routers.smart-home-simple-coffee-machine.rule=PathRegexp(`/smart-home-simple-coffee-machine/.+`)
      - traefik.http.services.smart-home-simple-coffee-machine.loadbalancer.server.port=${WEB_PORT_OUT}
    environment:
      # Since mashup communicates inside the Docker network use of localhost in a TD result as
      # the mashup container's its own localhost. Therefore hostname given as their docker service name.
      # In production we will have a dedicated address and this issue won't be a problem.
      - SIMPLE_COFFEE_MACHINE_HOSTNAME=smart-home-simple-coffee-machine
      - PORT=${WEB_PORT_OUT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    networks:
      - things_network
  smart-home-smart-clock:
    image: thingweb/test-things-smart-home-smart-clock
    labels:
      - traefik.udp.routers.smart-home-smart-clock.entrypoints=smart-home-smart-clock
      - traefik.udp.services.smart-home-smart-clock.loadbalancer.server.port=${SMART_HOME_SMART_CLOCK_PORT_OUT}
    environment:
      # Since mashup communicates inside the Docker network use of localhost in a TD result as
      # the mashup container's its own localhost. Therefore hostname given as their docker service name.
      # In production we will have a dedicated address and this issue won't be a problem.
      - SMART_CLOCK_HOSTNAME=smart-home-smart-clock
      - PORT=${SMART_HOME_SMART_CLOCK_PORT_OUT}
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 200M
        reservations:
          cpus: "0.01"
          memory: 50M
    networks:
      - things_network
  smart-home-mashup:
    image: thingweb/test-things-smart-home-main
    environment:
      - SIMPLE_COFFEE_MACHINE_HOSTNAME=smart-home-simple-coffee-machine
      - PRESENCE_SENSOR_BROKER_URI=${BROKER_URI}
      - SMART_CLOCK_HOSTNAME=smart-home-smart-clock
      - SMART_CLOCK_PORT=${SMART_HOME_SMART_CLOCK_PORT_OUT}
    depends_on:
      - smart-home-presence-sensor
      - smart-home-simple-coffee-machine
      - smart-home-smart-clock
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
        reservations:
          cpus: "0.01"
          memory: 25M
    networks:
      - things_network
  thing-monitor:
    image: thingweb/test-things-thing-monitor
    environment:
      - PORT=3000
      - LOKI_HOSTNAME=${LOKI_HOSTNAME}
      - LOKI_PORT=${LOKI_PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - NOTIFICATION_EMAIL=${NOTIFICATION_EMAIL}
      - THINGS_TO_MONITOR=http-express-calculator-simple,http,${STACK_HOSTNAME},${WEB_PORT_OUT},/http-express-calculator-simple;mqtt-calculator,mqtt,${BROKER_URI},1883,;modbus-elevator,modbus,${STACK_HOSTNAME},${MODBUS_ELEVATOR_PORT_OUT},
      - HEARTBEAT_INTERVAL=30000
      - HEARTBEAT_TIMEOUT=5000
      - RETRY_COUNT=3
    labels:
      - traefik.http.routers.thing-monitor.rule=PathPrefix(`/thing-monitor`)
      - traefik.http.services.thing-monitor.loadbalancer.server.port=3000
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
        reservations:
          cpus: "0.05"
          memory: 50M
    networks:
      - things_network

  mqtt-broker:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"  # MQTT
      - "9001:9001"  # WebSocket
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - things_network

  test-monitor:
    build:
      context: ./monitoring/thing-monitor
      dockerfile: Dockerfile
    environment:
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - NOTIFICATION_EMAIL=${NOTIFICATION_EMAIL}
    depends_on:
      - http-express-calculator-simple
      - mqtt-broker
    networks:
      - things_network

networks:
  things_network:
    name: things_network
    external: true
